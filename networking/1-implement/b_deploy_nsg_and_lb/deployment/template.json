{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageName": {
      "type": "string"
    },
    "storageKey": {
      "type": "string"
    },
    "storageSentinelName": {
      "type": "string"
    },
    "vmDiskIIS": {
      "type": "string"
    },
    "VhdContainerName": {
      "type": "string",
      "defaultValue": "Vhds"
    },
    "VhdStorageName": {
      "type": "string",
      "defaultValue": "[parameters('storageName')]"
    },
    "postDeployScriptFileLink": {
      "type": "string"
    },
    "immersionScriptModuleFileLink": {
      "type": "string"
    },
    "postRebootScriptFileLink": {
      "type": "string"
    },
    "vmAdminUserName": {
      "type": "string",
      "defaultValue": "contosoadmin"
    },
    "vmAdminPassword": {
      "type": "securestring",
      "defaultValue": "[concat(toUpper(substring(uniqueString(resourceGroup().id, subscription().id),0,6)), '#', substring(uniqueString(resourceGroup().id, subscription().id),6,6) )]"
    },
    "backendvm0name": {
      "type": "string",
      "defaultValue": "BackendVM0"
    },
    "backendvm1name": {
      "type": "string",
      "defaultValue": "BackendVM1"
    },
    "frontendvm0name": {
      "type": "string",
      "defaultValue": "FrontendVM0"
    },
    "frontendvm1name": {
      "type": "string",
      "defaultValue": "FrontendVM1"
    },
    "vmLocalUserName": {
      "type": "string",
      "defaultValue": "LocalUser"
    },
    "vmLocalUserPassword": {
      "type": "string",
      "defaultValue": "[concat(toUpper(substring(uniqueString(resourceGroup().id, subscription().id),0,6)), '#', substring(uniqueString(resourceGroup().id, subscription().id),6,6) )]"
    },
    "backendASName": {
      "type": "string",
      "defaultValue": "backendAS"
    },
    "frontendASName": {
      "type": "string",
      "defaultValue": "frontendAS"
    },
    "disablePasswordAuth": {
      "type": "bool",
      "defaultValue": false
    }
  },
  "variables": {
    "virtualNetworkName": "corpnet",
    "vNetPrefix": "10.1.0.0/16",
    "vNetSubnet1Name": "Subnet-1",
    "vNetSubnet1Prefix": "10.1.0.0/24",
    "vNetSubnet2Name": "Subnet-2",
    "vNetSubnet2Prefix": "10.1.1.0/24",
    "vNetSubnetGWName": "appgw-subnet",
    "vNetSubnetGWPrefix": "10.1.2.0/24",
    "vmSize": "Standard_DS2",
    "vNetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "vmSubnet1Ref": "[concat(variables('vNetID'), '/subnets/', variables('vNetSubnet1Name'))]",
    "vmSubnet2Ref": "[concat(variables('vNetID'), '/subnets/', variables('vNetSubnet2Name'))]",
    "backendVM0nic": "[concat(parameters('backendvm0name'), 'nic')]",
    "backendVM1nic": "[concat(parameters('backendvm1name'), 'nic')]",
    "frontendVM0nic": "[concat(parameters('frontendvm0name'), 'nic')]",
    "frontendVM1nic": "[concat(parameters('frontendvm1name'), 'nic')]",
    "vmStorageAccountContainerName": "[parameters('VhdContainerName')]",
    "backendVM0OSDiskName": "[concat(parameters('backendvm0name'), 'OSDisk.vhd')]",
    "backendVM1OSDiskName": "[concat(parameters('backendvm1name'), 'OSDisk.vhd')]",
    "frontendVM0OSDiskName": "[concat(parameters('frontendvm0name'), 'OSDisk.vhd')]",
    "frontendVM1OSDiskName": "[concat(parameters('frontendvm1name'), 'OSDisk.vhd')]",
    "vmVhd": "[split(parameters('vmDiskIIS'), '?')[0]]",
    "wadlogs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
    "wadperfcounters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
    "wadperfcounters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
    "wadcfgxstart": "[concat(variables('wadlogs'), variables('wadperfcounters1'), variables('wadperfcounters2'), '<Metrics resourceId=\"')]",
    "wadmetricsresourceid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
    "wadcfgxend": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
    "BackendVM0-ipName": "BackendVM0-ip"
  },
  "resources": [
    {
      "name": "[variables('virtualNetworkName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "tags": {
        "displayName": "[variables('virtualNetworkName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vNetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vNetSubnetGWName')]",
            "properties": {
              "addressPrefix": "[variables('vNetSubnetGWPrefix')]"
            }
          },
          {
            "name": "[variables('vNetSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vNetSubnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vNetSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vNetSubnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('backendASName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "backendAS"
      },
      "properties": {
        "platformUpdateDomainCount": 1,
        "platformFaultDomainCount": 1
      }
    },
    {
      "name": "[parameters('frontendASName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "frontendAS"
      },
      "properties": {
        "platformUpdateDomainCount": 1,
        "platformFaultDomainCount": 1
      }
    },
    {
      "name": "[variables('backendVM0nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "[variables('backendVM0nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmSubnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('backendVM1nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "[variables('backendVM1nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmSubnet2Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('frontendVM0nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "[variables('frontendVM0nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmSubnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('frontendVM1nic')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "[variables('frontendVM1nic')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('vmSubnet1Ref')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('backendVM0nic'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('backendASName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('backendvm0name')]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('backendASName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('backendvm0name')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('backendvm0name'),'OSDisk')]",
            "osType": "Windows",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[variables('vmVhd')]"
            },
            "vhd": {
              "uri": "[concat('https://', parameters('VhdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('backendVM0OSDiskName'))]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('backendVM0nic'))]"
            }
          ]
        }
      },
      "tags": {
        "displayName": "[parameters('backendvm0name')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "resources": [
        {
          "name": "CreateLocalUser",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('backendvm0name'))]"
          ],
          "tags": {
            "displayName": "CreateLocalUser"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "provisioningContainer": "[parameters('VhdContainerName')]",
              "fileUris": [
                "[parameters('immersionScriptModuleFileLink')]"
              ],
              "scriptFileUri": "[parameters('postDeployScriptFileLink')]",
              "otherFileUris": [
                "[parameters('postRebootScriptFileLink')]"
              ],
              "installGuide": false,
              "storageSentinelName": "[parameters('storageSentinelName')]",
              "vmLocalUserName": "[parameters('vmLocalUserName')]",
              "commandToExecute": "powershell -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command \"Import-Module (Get-ChildItem -Recurse -Path Immersion.psm1).FullName; Invoke-CustomScript\""
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "vmLocalUserPassword": "[parameters('vmLocalUserPassword')]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('backendvm0name'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('backendvm0name'), variables('wadcfgxend')))]",
              "storageAccount": "[parameters('storageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('backendVM1nic'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('backendASName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('backendvm1name')]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('backendASName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('backendvm1name')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('backendvm1name'),'OSDisk')]",
            "osType": "Windows",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[variables('vmVhd')]"
            },
            "vhd": {
              "uri": "[concat('https://', parameters('VhdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('backendVM1OSDiskName'))]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('backendVM1nic'))]"
            }
          ]
        }
      },
      "tags": {
        "displayName": "[parameters('backendvm1name')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "resources": [
        {
          "name": "CreateLocalUser",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('backendvm1name'))]"
          ],
          "tags": {
            "displayName": "CreateLocalUser"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "provisioningContainer": "[parameters('VhdContainerName')]",
              "fileUris": [
                "[parameters('immersionScriptModuleFileLink')]"
              ],
              "scriptFileUri": "[parameters('postDeployScriptFileLink')]",
              "otherFileUris": [
                "[parameters('postRebootScriptFileLink')]"
              ],
              "installGuide": false,
              "storageSentinelName": "[parameters('storageSentinelName')]",
              "vmLocalUserName": "[parameters('vmLocalUserName')]",
              "commandToExecute": "powershell -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command \"Import-Module (Get-ChildItem -Recurse -Path Immersion.psm1).FullName; Invoke-CustomScript\""
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "vmLocalUserPassword": "[parameters('vmLocalUserPassword')]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('backendvm1name'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('backendvm1name'), variables('wadcfgxend')))]",
              "storageAccount": "[parameters('storageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('frontendVM0nic'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('frontendASName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('frontendvm0name')]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('frontendASName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('frontendvm0name')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('frontendvm0name'),'OSDisk')]",
            "osType": "Windows",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[variables('vmVhd')]"
            },
            "vhd": {
              "uri": "[concat('https://', parameters('VhdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('frontendVM0OSDiskName'))]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('frontendVM0nic'))]"
            }
          ]
        }
      },
      "tags": {
        "displayName": "[parameters('frontendvm0name')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "resources": [
        {
          "name": "CreateLocalUser",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('frontendvm0name'))]"
          ],
          "tags": {
            "displayName": "CreateLocalUser"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "provisioningContainer": "[parameters('VhdContainerName')]",
              "fileUris": [
                "[parameters('immersionScriptModuleFileLink')]"
              ],
              "scriptFileUri": "[parameters('postDeployScriptFileLink')]",
              "otherFileUris": [
                "[parameters('postRebootScriptFileLink')]"
              ],
              "installGuide": false,
              "storageSentinelName": "[parameters('storageSentinelName')]",
              "vmLocalUserName": "[parameters('vmLocalUserName')]",
              "commandToExecute": "powershell -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command \"Import-Module (Get-ChildItem -Recurse -Path Immersion.psm1).FullName; Invoke-CustomScript\""
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "vmLocalUserPassword": "[parameters('vmLocalUserPassword')]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('frontendvm0name'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('frontendvm0name'), variables('wadcfgxend')))]",
              "storageAccount": "[parameters('storageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('frontendVM1nic'))]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('frontendASName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[parameters('frontendvm1name')]",
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('frontendASName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('frontendvm1name')]",
          "adminUsername": "[parameters('vmAdminUsername')]",
          "adminPassword": "[parameters('vmAdminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "[concat(parameters('frontendvm1name'),'OSDisk')]",
            "osType": "Windows",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "image": {
              "uri": "[variables('vmVhd')]"
            },
            "vhd": {
              "uri": "[concat('https://', parameters('VhdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('frontendVM1OSDiskName'))]"
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('frontendVM1nic'))]"
            }
          ]
        }
      },
      "tags": {
        "displayName": "[parameters('frontendvm1name')]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "resources": [
        {
          "name": "CreateLocalUser",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('frontendvm1name'))]"
          ],
          "tags": {
            "displayName": "CreateLocalUser"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.8",
            "autoUpgradeMinorVersion": false,
            "settings": {
              "provisioningContainer": "[parameters('VhdContainerName')]",
              "fileUris": [
                "[parameters('immersionScriptModuleFileLink')]"
              ],
              "scriptFileUri": "[parameters('postDeployScriptFileLink')]",
              "otherFileUris": [
                "[parameters('postRebootScriptFileLink')]"
              ],
              "installGuide": false,
              "storageSentinelName": "[parameters('storageSentinelName')]",
              "vmLocalUserName": "[parameters('vmLocalUserName')]",
              "commandToExecute": "powershell -NoProfile -NonInteractive -ExecutionPolicy Unrestricted -Command \"Import-Module (Get-ChildItem -Recurse -Path Immersion.psm1).FullName; Invoke-CustomScript\""
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "vmLocalUserPassword": "[parameters('vmLocalUserPassword')]"
            }
          }
        },
        {
          "name": "Microsoft.Insights.VMDiagnosticsSettings",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('frontendvm1name'))]"
          ],
          "tags": {
            "displayName": "AzureDiagnostics"
          },
          "properties": {
            "publisher": "Microsoft.Azure.Diagnostics",
            "type": "IaaSDiagnostics",
            "typeHandlerVersion": "1.5",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "xmlCfg": "[base64(concat(variables('wadcfgxstart'), variables('wadmetricsresourceid'), parameters('frontendvm1name'), variables('wadcfgxend')))]",
              "storageAccount": "[parameters('storageName')]"
            },
            "protectedSettings": {
              "storageAccountName": "[parameters('storageName')]",
              "storageAccountKey": "[parameters('storageKey')]",
              "storageAccountEndPoint": "https://core.windows.net"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "resourcegrouplocation": {
      "type": "string",
      "value": "[resourceGroup().location]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageName')]"
    },
    "backendvm0name": {
      "type": "string",
      "value": "[parameters('backendvm0name')]"
    },
    "backendvm1name": {
      "type": "string",
      "value": "[parameters('backendvm1name')]"
    },
    "backendASName": {
      "type": "string",
      "value": "[parameters('backendASName')]"
    },
    "vmLocalUserName": {
      "type": "string",
      "value": "[parameters('vmLocalUserName')]"
    },
    "vmLocalUserPassword": {
      "type": "string",
      "value": "[parameters('vmLocalUserPassword')]"
    },
    "vnetname": {
      "type": "string",
      "value": "[variables('virtualNetworkName')]"
    }
  }
}
